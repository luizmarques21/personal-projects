{"version":3,"sources":["../../app-es6/service/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;kDAEKC,G,EAAK;AACf,4BAAI,CAACA,IAAIC,EAAT,EACI,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACJ,+BAAOH,GAAP;AACH;;;wCAEII,G,EAAK;AAAA;;AACN,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBADH,EAEFM,IAFE,CAEG;AAAA,mCAAON,IAAIQ,IAAJ,EAAP;AAAA,yBAFH,CAAP;;AAIA;;;;;;;;;;;;;AAaH;;;yCAEIJ,G,EAAKK,I,EAAM;AAAA;;AACZ,+BAAOJ,MAAMD,GAAN,EAAW;AACdM,qCAAS,EAAC,gBAAiB,kBAAlB,EADK;AAEdC,oCAAQ,MAFM;AAGdC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,yBAAX,EAIJH,IAJI,CAIC;AAAA,mCAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBAJD,CAAP;;AAMA;;;;;;;;;;;;;;;AAeH","file":"HttpService.js","sourcesContent":["export class HttpService {\n\n    _handleErrors(res) {\n        if (!res.ok)\n            throw new Error(res.statusText);\n        return res;\n    }\n\n    get (url) {\n        return fetch(url)\n            .then(res => this._handleErrors(res))\n            .then(res => res.json());\n\n        /*return new Promise((resolve, reject) => {\n            let xhr = new XMLHttpRequest();\n            xhr.open('GET', url);\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState === 4)\n                    if (xhr.status === 200) {\n                        resolve(JSON.parse(xhr.responseText));\n                    } else {\n                        reject(xhr.responseText);\n                    }\n            };\n            xhr.send();\n        });*/\n    }\n\n    post(url, dado) {\n        return fetch(url, {\n            headers: {'Content-type' : 'application/json'},\n            method: 'post',\n            body: JSON.stringify(dado)\n        }).then(res => this._handleErrors(res));\n\n        /*return new Promise ((resolve, reject) => {\n            let xhr = new XMLHttpRequest();\n            xhr.open(\"POST\", url, true);\n            xhr.setRequestHeader(\"Content-type\", \"application/json\");\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState === 4) {\n                    if (xhr.status === 200) {\n                        resolve(JSON.parse(xhr.responseText));\n                    } else {\n                        reject(xhr.responseText);\n                    }\n                }\n            };\n            xhr.send(JSON.stringify(dado)); //usando JSON.stringifly para converter objeto em uma string no formato JSON\n        });*/\n    }\n\n}"]}